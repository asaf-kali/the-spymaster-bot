name: Continuous deployment

on:
  push:

jobs:

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          make install-ci
          make install-test
      - name: Run tests
        run: |
          make test

  automation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout automation repo
        uses: actions/checkout@master
        with:
          repository: asaf-kali/the-spymaster-automation
          token: ${{ secrets.AUTOMATION_REPO_PAT }}
          path: automation
      - name: Set up python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install CI dependencies
        run: cd automation; make install-ci
      - name: Install dependencies
        run: cd automation; make install-test
      - name: Run automation
        run: cd automation; make test

  deploy-dev:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - automation
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      DEFAULT_SENTRY_DSN: ${{ secrets.DEFAULT_SENTRY_DSN }}
      DEFAULT_TELEGRAM_TOKEN: ${{ secrets.DEFAULT_TELEGRAM_TOKEN }}
      DEFAULT_VARS_FILE: tf/default.tfvars
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create tfvars files
        run: |
          echo "sentry_dsn = \"${DEFAULT_SENTRY_DSN}\"" > ${DEFAULT_VARS_FILE}
          echo "telegram_token = \"${DEFAULT_TELEGRAM_TOKEN}\"" >> ${DEFAULT_VARS_FILE}
      - name: Install CI dependencies
        run: make install-ci
      - name: Terraform init
        run: cd tf; terraform init
      - name: Build Lambda Layer
        run: make build-layer
      - name: Terraform plan
        run: make plan
      - name: Terraform apply
        run: make apply
